/**
 * GiveinterestController
 *
 * @description :: Server-side logic for managing giveinterests
 * @help        :: See http://sailsjs.org/#!/documentation/concepts/Controllers
 */
function addDays(theDate, days) {
    return new Date(theDate.getTime() + days * 24 * 60 * 60 * 1000);
}
var schedule = require('node-schedule');
var rule = new schedule.RecurrenceRule();
rule.hour = 0;
rule.minute = 0;
rule.second = 0;
var j = schedule.scheduleJob(rule, function () {
    let now = new Date();
    let date = now.getDate();
    let month = now.getMonth();
    let year = now.getFullYear();
    let hours = now.getHours();
    // let minutes = now.getMinutes();
    // let seconds = now.getSeconds();
    // let milliseconds = now.getMilliseconds();
    var dat = new Date(year, month, date);
    Bagbitcoin.find({ next_received: dat }).exec((err, bags) => {
        if (err)
            console.log(err)
        else {
            if (bags.length <= 0)
                console.log('Updated inerest for 0 user');
            else
                bags.map((bag, index) => {
                    if (bag.period > 0) {
                        let next = addDays(bag.next_received, 15);
                        let new_pre = bag.period - 1;
                        let interest = (bag.investment*bag.interest_percent)/100;
                        interest = parseFloat(interest)
                        Bagbitcoin.update({ id: bag.id }, { 
                            period: new_pre, next_received: next ,
                            balance_wallet : parseFloat(bag.balance_wallet) + interest, 
                        }).exec((err, updated) => {
                            if (err)
                                console.log('Failed to update interest. ' + err);
                            else
                            {
                                Historyinterestreceived.create({
                                    id_user : bag.id_user, interset_received : bag.interest_percent, pv_received : interest
                                }).exec((err, history) => {
                                    if(!history)
                                        console.log('Failed to create history for user id : #'+bag.id_user +'. '+ err);
                                }); // Save history received interest
                                console.log('Updated interest for ' + updated.length + ' user');
                            }
                               
                        });
                    }
                });
        }
    });
});
module.exports = {

};

